/**
 * This class is generated by jOOQ
 */
package generated;

/**
 * This class is generated by jOOQ.
 *
 * A class modelling foreign key relationships between tables of the <code>protectme</code> 
 * schema
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.4" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

	// -------------------------------------------------------------------------
	// IDENTITY definitions
	// -------------------------------------------------------------------------

	public static final org.jooq.Identity<generated.tables.records.AccountsRecord, java.lang.Integer> IDENTITY_ACCOUNTS = Identities0.IDENTITY_ACCOUNTS;
	public static final org.jooq.Identity<generated.tables.records.CompanyRecord, java.lang.Integer> IDENTITY_COMPANY = Identities0.IDENTITY_COMPANY;
	public static final org.jooq.Identity<generated.tables.records.NamesRecord, java.lang.Integer> IDENTITY_NAMES = Identities0.IDENTITY_NAMES;
	public static final org.jooq.Identity<generated.tables.records.PicturesRecord, java.lang.Integer> IDENTITY_PICTURES = Identities0.IDENTITY_PICTURES;

	// -------------------------------------------------------------------------
	// UNIQUE and PRIMARY KEY definitions
	// -------------------------------------------------------------------------

	public static final org.jooq.UniqueKey<generated.tables.records.AccountsRecord> KEY_ACCOUNTS_PRIMARY = UniqueKeys0.KEY_ACCOUNTS_PRIMARY;
	public static final org.jooq.UniqueKey<generated.tables.records.AccountsRecord> KEY_ACCOUNTS_USERNAME = UniqueKeys0.KEY_ACCOUNTS_USERNAME;
	public static final org.jooq.UniqueKey<generated.tables.records.ClientsRecord> KEY_CLIENTS_PRIMARY = UniqueKeys0.KEY_CLIENTS_PRIMARY;
	public static final org.jooq.UniqueKey<generated.tables.records.CommentsRecord> KEY_COMMENTS_PRIMARY = UniqueKeys0.KEY_COMMENTS_PRIMARY;
	public static final org.jooq.UniqueKey<generated.tables.records.CompanyRecord> KEY_COMPANY_PRIMARY = UniqueKeys0.KEY_COMPANY_PRIMARY;
	public static final org.jooq.UniqueKey<generated.tables.records.NamesRecord> KEY_NAMES_PRIMARY = UniqueKeys0.KEY_NAMES_PRIMARY;
	public static final org.jooq.UniqueKey<generated.tables.records.PicturesRecord> KEY_PICTURES_PRIMARY = UniqueKeys0.KEY_PICTURES_PRIMARY;
	public static final org.jooq.UniqueKey<generated.tables.records.ProtectednamesRecord> KEY_PROTECTEDNAMES_PRIMARY = UniqueKeys0.KEY_PROTECTEDNAMES_PRIMARY;
	public static final org.jooq.UniqueKey<generated.tables.records.UnprotectednamesRecord> KEY_UNPROTECTEDNAMES_PRIMARY = UniqueKeys0.KEY_UNPROTECTEDNAMES_PRIMARY;

	// -------------------------------------------------------------------------
	// FOREIGN KEY definitions
	// -------------------------------------------------------------------------


	// -------------------------------------------------------------------------
	// [#1459] distribute members to avoid static initialisers > 64kb
	// -------------------------------------------------------------------------

	private static class Identities0 extends org.jooq.impl.AbstractKeys {
		public static org.jooq.Identity<generated.tables.records.AccountsRecord, java.lang.Integer> IDENTITY_ACCOUNTS = createIdentity(generated.tables.Accounts.ACCOUNTS, generated.tables.Accounts.ACCOUNTS.ACCOUNTID);
		public static org.jooq.Identity<generated.tables.records.CompanyRecord, java.lang.Integer> IDENTITY_COMPANY = createIdentity(generated.tables.Company.COMPANY, generated.tables.Company.COMPANY.COMPANYID);
		public static org.jooq.Identity<generated.tables.records.NamesRecord, java.lang.Integer> IDENTITY_NAMES = createIdentity(generated.tables.Names.NAMES, generated.tables.Names.NAMES.NAMEID);
		public static org.jooq.Identity<generated.tables.records.PicturesRecord, java.lang.Integer> IDENTITY_PICTURES = createIdentity(generated.tables.Pictures.PICTURES, generated.tables.Pictures.PICTURES.PICTUREID);
	}

	private static class UniqueKeys0 extends org.jooq.impl.AbstractKeys {
		public static final org.jooq.UniqueKey<generated.tables.records.AccountsRecord> KEY_ACCOUNTS_PRIMARY = createUniqueKey(generated.tables.Accounts.ACCOUNTS, generated.tables.Accounts.ACCOUNTS.ACCOUNTID);
		public static final org.jooq.UniqueKey<generated.tables.records.AccountsRecord> KEY_ACCOUNTS_USERNAME = createUniqueKey(generated.tables.Accounts.ACCOUNTS, generated.tables.Accounts.ACCOUNTS.USERNAME);
		public static final org.jooq.UniqueKey<generated.tables.records.ClientsRecord> KEY_CLIENTS_PRIMARY = createUniqueKey(generated.tables.Clients.CLIENTS, generated.tables.Clients.CLIENTS.NAMEID);
		public static final org.jooq.UniqueKey<generated.tables.records.CommentsRecord> KEY_COMMENTS_PRIMARY = createUniqueKey(generated.tables.Comments.COMMENTS, generated.tables.Comments.COMMENTS.ACCOUNTID, generated.tables.Comments.COMMENTS.NAMEID, generated.tables.Comments.COMMENTS.COMMENTID);
		public static final org.jooq.UniqueKey<generated.tables.records.CompanyRecord> KEY_COMPANY_PRIMARY = createUniqueKey(generated.tables.Company.COMPANY, generated.tables.Company.COMPANY.COMPANYID);
		public static final org.jooq.UniqueKey<generated.tables.records.NamesRecord> KEY_NAMES_PRIMARY = createUniqueKey(generated.tables.Names.NAMES, generated.tables.Names.NAMES.NAMEID);
		public static final org.jooq.UniqueKey<generated.tables.records.PicturesRecord> KEY_PICTURES_PRIMARY = createUniqueKey(generated.tables.Pictures.PICTURES, generated.tables.Pictures.PICTURES.PICTUREID);
		public static final org.jooq.UniqueKey<generated.tables.records.ProtectednamesRecord> KEY_PROTECTEDNAMES_PRIMARY = createUniqueKey(generated.tables.Protectednames.PROTECTEDNAMES, generated.tables.Protectednames.PROTECTEDNAMES.ACCOUNTID, generated.tables.Protectednames.PROTECTEDNAMES.NAMEID);
		public static final org.jooq.UniqueKey<generated.tables.records.UnprotectednamesRecord> KEY_UNPROTECTEDNAMES_PRIMARY = createUniqueKey(generated.tables.Unprotectednames.UNPROTECTEDNAMES, generated.tables.Unprotectednames.UNPROTECTEDNAMES.NAMEID, generated.tables.Unprotectednames.UNPROTECTEDNAMES.ACCOUNTID);
	}
}
